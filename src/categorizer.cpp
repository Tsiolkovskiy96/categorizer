#include "categorizer.hpp"

using namespace std;

unsigned int histogram[256]; // место где хранится наша гистограмма; записывать индекс яркости от 0 до 255;

int main(int argc, char** args)                                             // "args" - массив состоящий из строк
{
    fstream f;                                                              // переменная используемая для управления входящими файлами; чтобы использовать файлы;

    char PGM_hdr1[2];                                                       // ввели переменную символов с указанием массива и сичла элементов в нём;

    if (argc == 1)                                                          // Проверка условия;
    {
        cout << "Please specify input file(s)!" << endl;
        return 1;                                                           // Прерываем функцию main и выходим из программы;
    }

    for(int i = 1; i < argc; i++)                                            // Проверка с помощью функции счетчика;
    {
        f.open(args[i], ios::binary|ios::in);                                // "f." функция подставновки имён; "open" - принимаеи на вход имя файла; "ios::binary|ios::stream" - флаги ввода и вывода; "ios in" - файл открывается для чтения ввода данных в программу;
        if(!f.is_open())                                                     // проверка существования файла; "Если функция вернула False то делать ..."
        {
            cout << "File: " << args[i] << " is not accessible!" << endl;
            continue;                                                        // команда сброса итерации цикла;
        }

        cout << "File " << args[i] << "opened" << endl;

        f.read(PGM_hdr1, 2);                                                 // считать файл, указание на переменную PGM_hdr1 и число элементов
        if((PGM_hdr1[0] != 0x50)||(PGM_hdr1[1] != 0x35)) continue;           // условие выполнения
        cout << "PGM header detected" << endl;

        f.seekg(f.tellg() + 1);                                              // функкции которые помогут сдвинуть текущую позицию чтения в файле на 1 байт;

        f.close();                                                           // завершение функции и подготовить к выполнению других операций над файлом;
    }
    return 0;
}


